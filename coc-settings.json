// https://github.com/neoclide/coc.nvim/wiki/Language-servers
{

  // re: https://github.com/neoclide/coc.nvim/blob/master/data/schema.json
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.hoverTarget": "float",
  "coc.preferences.enableFloatHighlight": true,
  "coc.source.file.ignoreHidden": false,
  // disable autoformatting, for now, invoke manually until/unless the codebase
  // I normally work in adopts a format.
  // "coc.preferences.formatOnSaveFiletypes": ["python"],
  // "coc.preferences.formatOnType": true,

  // https://github.com/neoclide/coc-python
  // disable jedi so the extension downloads/installs mpls
  "python.jediEnabled": false,
  "python.autoUpdateLanguageServer": true,
  "python.autoComplete.addBrackets": true,
  "python.autoComplete.typeshedPaths": ["./typeshed_stubs"],
  "python.formatting.provider": "black",
  "python.formatting.yapfArgs": ["--style", "{column_limit: 100}"],
  "python.formatting.autopep8Args": ["--max-line-length", "100", "--experimental"],
  "python.formatting.blackPath": "~/.pyenv/shims/black",
  "python.formatting.blackArgs": ["--line-length", "100"],
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.lintOnSave": true,

  "languageserver": {
    // https://scalameta.org/metals/docs/editors/vim.html
    "metals": {
      "command": "metals-vim",
      "rootPatterns": [
        "build.sbt"
      ],
      "filetypes": [
        "scala",
        "sbt"
      ]
    },
    // https://github.com/mads-hartmann/bash-language-server
    "bash": {
      "command": "bash-language-server",
      "args": [
        "start"
      ],
      "filetypes": [
        "sh"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    // https://github.com/rcjsuen/dockerfile-language-server-nodejs
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": [
        "dockerfile"
      ],
      "args": [
        "--stdio"
      ]
    },
    // (vim/erb/markdown) https://github.com/mattn/efm-langserver
    "efm": {
      "command": "efm-langserver",
      // "args": [],
      // custom config path
      "args": [
        "-c",
        "~/.config/nvim/efm-config.yml"
      ],
      "filetypes": [
        "vim",
        "eruby",
        "markdown"
      ]
    },
    "dls": {
      "command": "diagnostic-languageserver",
      "args": [
        "--stdio"
      ],
      "filetypes": [
        "sh",
        "email"
      ],
      "initializationOptions": {
        "linters": {
          "shellcheck": {
            "command": "shellcheck",
            "debounce": 100,
            "args": [
              "-x",
              "--format=gcc",
              "-"
            ],
            "offsetLine": 0,
            "offsetColumn": 0,
            "sourceName": "shellcheck",
            "formatLines": 1,
            "formatPattern": [
              "^[^:]+:(\\d+):(\\d+):\\s+([^:]+):\\s+(.*)$",
              {
                "line": 1,
                "column": 2,
                "message": 4,
                "security": 3
              }
            ],
            "securities": {
              "error": "error",
              "warning": "warning",
              "note": "info"
            }
          },
          "languagetool": {
            "command": "languagetool",
            "debounce": 200,
            "args": [
              "-"
            ],
            "offsetLine": 0,
            "offsetColumn": 0,
            "sourceName": "languagetool",
            "formatLines": 2,
            "formatPattern": [
              "^\\d+?\\.\\)\\s+Line\\s+(\\d+),\\s+column\\s+(\\d+),\\s+([^\\n]+)\nMessage:\\s+(.*)$",
              {
                "line": 1,
                "column": 2,
                "message": [
                  4,
                  3
                ]
              }
            ],
          }
        },
        "filetypes": {
          "sh": "shellcheck",
          "email": "languagetool"
        }
      }
    }
  }
}
